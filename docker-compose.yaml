services:

  metrics_api:
    build:
      context: .
      dockerfile: services/metrics/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - redis
    volumes:
      - ./config.yaml:/app/shared/config/config.yaml:ro

  drivers_loader:
    build:
      context: .
      dockerfile: services/drivers_loader/Dockerfile
    depends_on:
      - redis
    restart: no
    volumes:
      - ./config.yaml:/app/shared/config/config.yaml:ro

  rides_producer:
    build:
      context: .
      dockerfile: services/rides_producer/Dockerfile
    depends_on:
      kafka:
        condition: service_started
      redis:
        condition: service_started
      drivers_loader:
        condition: service_completed_successfully
    volumes:
      - ./config.yaml:/app/shared/config/config.yaml:ro

  dispatcher:
    build:
      context: .
      dockerfile: services/dispatcher/Dockerfile
    depends_on:
      kafka:
        condition: service_started
      redis:
        condition: service_started
      drivers_loader:
        condition: service_completed_successfully
    volumes:
      - ./config.yaml:/app/shared/config/config.yaml:ro

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092" # internal broker
    environment:
      CLUSTER_ID: "pKZTOZkJQF2sX2d5s3Zy5g"
      KAFKA_BROKER_ID: 1
      KAFKA_KRAFT_MODE: "true"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

      # just telling kafka to use 1 broker, I don't really need more than that for the assigment
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    # NOTE: I disabled persistence (appendonly=no, save="") for easier testing.
    # I'm aware that this  should NOT be done in production where data persistence is critical.
    command: [ "redis-server", "--appendonly", "no", "--save", "" ]

volumes:
  kafka_data: